% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tvdbn_class.R
\name{bn_to_tvdbn}
\alias{bn_to_tvdbn}
\title{Cast from a regular Bayesian Network to a Time-varying DBN}
\usage{
bn_to_tvdbn(bn)
}
\arguments{
\item{bn}{The Bayesian Network that we desire to convert to a TV-DBN. The type can be \code{bn} or \code{bn.fit}}
}
\value{
A fitted Time-varying Dynamic Bayesian Network based on the Bayesian Network provided.
The type of the return object is \code{tvdbn.fit}, that inherits from \code{bn.fit} and from \code{bn.fit.dnet}
or \code{bn.fit.gnet}, depending on the type (discrete or gaussian) of the nodes. Alternatively, if
a graph (untrained network) of type \code{bn} is provided, a object of type \code{tvdbn} that inherits
from \code{bn} is returned
}
\description{
Method to cast from a regular Bayesian Network to a Time-varying Dynamic Bayesian
Network. This method should be used withgreat care or outright ignored in favour of learn_tvdbn
or similars. If used, be sure to follow the next conditions:

(1) All the variables should have their corresponding time point appended (e.g variable_t_0)
and all the variables must be present with any time point

(2) Only allow arcs from a time instant t to a time instant t+1 (intraslices arcs are also
forbidden in the current release).
}
\details{
We selected the S3 class convention instead of S4 since bnlearn using S3. We highly
recommend adopting the S4 in future projects, but in this project was unfeasible.

The only attributes that can be of our interest are the name of the variables and number of
time points, which can be calculated
}
